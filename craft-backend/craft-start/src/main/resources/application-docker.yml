# =============================================
# Docker 环境配置文件
# =============================================

server:
  port: 8080

spring:
  application:
    name: craft-backend
  profiles:
    active: docker
  
  # 数据源配置
  datasource:
    url: jdbc:mysql://mysql:3306/craft?useSSL=false&serverTimezone=Asia/Shanghai&characterEncoding=UTF-8&allowPublicKeyRetrieval=true
    username: craft_user
    password: craft_password
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  # Jackson 配置
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    time-zone: Asia/Shanghai
    date-format: yyyy-MM-dd HH:mm:ss
  
  # MVC 配置
  mvc:
    format:
      date-time: yyyy-MM-dd'T'HH:mm:ss
  
  # Redis 配置
  data:
    redis:
      host: redis
      port: 6379
      password: ""
      database: 0
      timeout: 3000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 3000ms

# Redis 聊天记忆存储配置
redis:
  chat-memory-store:
    initial-expire: 1800  # 30分钟
    renew-expire: 1800    # 30分钟

# MyBatis-Plus 配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    default-enum-type-handler: org.apache.ibatis.type.EnumTypeHandler
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
  global-config:
    db-config:
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0

# 日志配置
logging:
  level:
    root: info
    io.github.anthem37: debug
    org.springframework.web: debug
    com.baomidou.mybatisplus: debug
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/craft-backend.log
    max-size: 100MB
    max-history: 30

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  health:
    redis:
      enabled: true
    db:
      enabled: true